{
    "aws": {
        "resources": [
            "ec2Instance",
            "ec2SG",
            "ec2Volume",
            "rds",
            "resourceGroup",
            "tagsValue",
            "ecsCluster",
            "ecrRepository"
        ],
        "thumbnail": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/1024px-Amazon_Web_Services_Logo.svg.png",
        "documentation": "https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/welcome.html",
        "freeRules": []
    },
    "azure": {
        "resources": [
            "ResourceManagementClient",
            "SubscriptionClient",
            "SqlManagementClient",
            "StorageManagementClient",
            "WebSiteManagementClient",
            "MonitorClient",
            "ServiceBusManagementClient",
            "KeyVaultManagementClient",
            "ComputeManagementClient",
            "EventHubManagementClient",
            "RedisManagementClient",
            "PostgreSQLManagementClient",
            "AzureMapsManagementClient",
            "MariaDBManagementClient",
            "AzureMediaServices",
            "ContainerServiceClient",
            "ContainerRegistryManagementClient",
            "CosmosDBManagementClient",
            "StreamAnalyticsManagementClient",
            "ConsumptionManagementClient",
            "RecoveryServicesBackupClient",
            "ManagementLockClient",
            "EventGridManagementClient",
            "PolicyClient",
            "IotCentralClient",
            "DevTestLabsClient",
            "LogicManagementClient",
            "DnsManagementClient",
            "PurviewManagementClient",
            "ServiceFabricManagementClient",
            "ApplicationClient",
            "ManagedServiceIdentityClient",
            "BillingManagementClient",
            "SearchManagementClient",
            "ManagementGroupsAPI",
            "CdnManagementClient",
            "MicrosoftResourceHealth",
            "AzureMachineLearningWorkspaces",
            "PrivateDnsManagementClient",
            "ContainerInstanceManagementClient",
            "AuthorizationManagementClient",
            "KustoManagementClient",
            "PowerBIEmbeddedManagementClient",
            "HybridComputeManagementClient",
            "SignalRManagementClient",
            "AzureChangeAnalysisManagementClient",
            "AttestationManagementClient",
            "ImageBuilderClient",
            "MarketplaceOrderingAgreements",
            "CommunicationServiceManagementClient",
            "CognitiveServicesManagementClient",
            "PolicyInsightsClient",
            "StorageCacheManagementClient",
            "FrontDoorManagementClient",
            "MixedRealityClient",
            "PeeringManagementClient",
            "FeatureClient",
            "NetAppManagementClient",
            "VMwareCloudSimple",
            "HDInsightManagementClient",
            "StorageImportExport",
            "AzureMLWebServicesManagementClient",
            "MicrosoftStorageSync",
            "PowerBIDedicated",
            "ACEProvisioningManagementPartnerAPI",
            "DataCatalogRestClient",
            "AzureMigrateV2",
            "BatchManagementClient",
            "MicrosoftSerialConsoleClient",
            "RedisEnterpriseManagementClient",
            "RelayAPI",
            "TrafficManagerManagementClient",
            "DomainServicesResourceProvider",
            "PostgreSQLManagementFlexibleServerClient",
            "SiteRecoveryManagementClient",
            "AppPlatformManagementClient",
            "SourceControlConfigurationClient",
            "AppConfigurationManagementClient",
            "LabServicesClient",
            "DataBoxManagementClient",
            "VideoAnalyzerManagementClient",
            "AzureQuotaExtensionAPI",
            "Portal",
            "AzureOrbital",
            "DesktopVirtualizationAPIClient",
            "LoadTestClient",
            "CustomLocationsManagementClient",
            "DnsResolverManagementClient",
            "MobileNetworkManagementClient",
            "NetworkManagementClient",
            "SynapseManagementClient",
            "MySQLManagementClient",
            "SecurityCenter",
            "AzureBotService",
            "TemplateSpecsClient",
            "ManagementLinkClient",
            "ResourceMoverServiceAPI",
            "AzureVMwareSolutionAPI",
            "DataBoxEdgeManagementClient",
            "MicrosoftDatadogClient",
            "IotHubClient",
            "AzureStackHCIClient",
            "MicrosoftSupport",
            "MachineLearningWorkspacesManagementClient",
            "OperationalInsightsManagementClient",
            "ConfluentManagementClient",
            "OpenEnergyPlatformManagementServiceAPIs",
            "ApiManagementClient",
            "RecoveryServicesClient",
            "AzureDatabricksManagementClient",
            "DataFactoryManagementClient",
            "TimeSeriesInsightsClient",
            "AzureDigitalTwinsManagementClient",
            "AzureReservationAPI",
            "WebPubSubManagementClient",
            "NotificationHubsManagementClient",
            "ConnectedKubernetesClient",
            "AdvisorManagementClient",
            "HealthbotClient",
            "AzureAnalysisServices",
            "HealthcareApisManagementClient",
            "CustomerInsightsManagementClient",
            "IotDpsClient",
            "DevSpacesManagementClient",
            "MySQLManagementFlexibleServerClient",
            "SecurityInsights",
            "ContainerAppsAPIClient",
            "IoTSpacesClient",
            "IoTSpacesClientContext",
            "ChangesClient",
            "ServiceLinkerManagementClient",
            "ConfidentialLedgerClient",
            "DeviceUpdate",
            "DynatraceObservability",
            "EducationManagementClient",
            "AzureDedicatedHSMResourceProvider",
            "ExternalIdentitiesConfigurationClient",
            "DashboardManagementClient",
            "Scvmm"
        ],
        "thumbnail": "https://cdn.icon-icons.com/icons2/2699/PNG/512/microsoft_azure_logo_icon_168977.png",
        "documentation": "https://learn.microsoft.com/fr-fr/javascript/api/overview/azure/?view=azure-node-latest",
        "freeRules": [
            {
                "name": "azure-testing-automate",
                "description": "testingautomate",
                "applied": false,
                "level": 1,
                "cloudProvider": "azure",
                "objectName": "EducationManagementClient",
                "conditions": [
                    {
                        "property": "operations",
                        "condition": "ALL",
                        "value": [
                            {
                                "property": "isDataAction",
                                "condition": "DIFFERENT",
                                "value": false
                            }
                        ]
                    }
                ]
            },
            {
                "name": "azure-testing-nsg",
                "description": "automatensg",
                "applied": false,
                "level": 1,
                "cloudProvider": "azure",
                "objectName": "NetworkManagementClient",
                "conditions": [
                    {
                        "property": "networkSecurityGroups",
                        "condition": "ALL",
                        "value": [
                            {
                                "property": "networkInterfaces",
                                "condition": "COUNT_SUP_OR_EQUAL",
                                "value": 1
                            },
                            {
                                "property": "subnets",
                                "condition": "COUNT_SUP_OR_EQUAL",
                                "value": 1
                            }
                        ]
                    }
                ]
            },
            {
                "name": "azure-is-disk-orphan",
                "description": "this rules is to check if disk is orphan",
                "applied": false,
                "level": 1,
                "cloudProvider": "azure",
                "objectName": "ComputeManagementClient",
                "conditions": [
                    {
                        "property": "disks",
                        "condition": "ALL",
                        "value": [
                            {
                                "property": "diskState",
                                "condition": "DIFFERENT",
                                "value": "Unattached"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "azure-is-disk-orphan",
                "description": "this rules is to check if disk is orphan",
                "applied": false,
                "level": 1,
                "cloudProvider": "azure",
                "objectName": "ApplicationClient",
                "conditions": [
                    {
                        "property": "disks",
                        "condition": "ALL",
                        "value": [
                            {
                                "property": "diskState",
                                "condition": "DIFFERENT",
                                "value": "Unattached"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "gcp": {
        "resources": [
            "tasks_queue",
            "compute",
            "storage",
            "project",
            "billingAccount",
            "cluster",
            "workflows",
            "websecurity",
            "connector",
            "vmware",
            "namespace",
            "certificate",
            "secret",
            "connectivity_test",
            "resource_settings",
            "redis_instance",
            "os_config",
            "org_policy_constraint",
            "airflow_image_version",
            "disk",
            "compute_item"
        ],
        "thumbnail": "https://res.cloudinary.com/startup-grind/image/upload/c_fill,dpr_2.0,f_auto,g_center,q_auto:good/v1/gcs/platform-data-dsc/events/google-cloud-square.png",
        "documentation": "https://cloud.google.com/nodejs/docs/reference",
        "freeRules": []
    },
    "github": {
        "resources": [
            "repositories",
            "branches",
            "issues",
            "organizations",
            "members",
            "teams",
            "teamProjects",
            "teamMembers",
            "teamRepositories",
            "outsideCollaborators"
        ],
        "thumbnail": "https://1000logos.net/wp-content/uploads/2021/05/GitHub-logo-768x432.png",
        "documentation": "https://docs.github.com/en/rest?apiVersion=2022-11-28",
        "freeRules": [
            {
                "name": "git-is-repository-private",
                "description": "this rules is to check if git repo is private",
                "applied": true,
                "level": 0,
                "cloudProvider": "github",
                "objectName": "repositories",
                "conditions": [
                    {
                        "property": "private",
                        "condition": "EQUAL",
                        "value": true
                    }
                ]
            },
            {
                "name": "git-is-branch-protectec",
                "description": "this rules is to check if git branch is protected",
                "applied": true,
                "level": 0,
                "cloudProvider": "github",
                "objectName": "branches",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "protected",
                                "condition": "DIFFERENT",
                                "value": true
                            },
                            {
                                "property": "name",
                                "condition": "EQUAL",
                                "value": "master"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "git-is-repository-private",
                "description": "this rules is to check if my git repo is private",
                "applied": true,
                "level": 1,
                "cloudProvider": "github",
                "objectName": "repositories",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "private",
                                "condition": "EQUAL",
                                "value": false
                            },
                            {
                                "property": "full_name",
                                "condition": "EQUAL",
                                "value": "4urcloud/Kexa_website"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "git-is-branch-protected",
                "description": "this rules is to check if my git branch is protected",
                "applied": true,
                "level": 1,
                "cloudProvider": "github",
                "objectName": "branches",
                "conditions": [
                    {
                        "operator": "OR",
                        "criteria": [
                            {
                                "property": "repo",
                                "condition": "DIFFERENT",
                                "value": "Kexa_website"
                            },
                            {
                                "property": "name",
                                "condition": "DIFFERENT",
                                "value": "main"
                            },
                            {
                                "property": "protected",
                                "condition": "EQUAL",
                                "value": true
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "googleDrive": {
        "resources": [
            "files"
        ],
        "thumbnail": "https://icones.pro/wp-content/uploads/2022/08/logo-google-drive.png",
        "documentation": "https://developers.google.com/drive/api/reference/rest/v3?hl=fr",
        "freeRules": [
            {
                "name": "check-regex-drive-file-name",
                "description": "compare drive file name to regex for compliance",
                "applied": true,
                "level": 0,
                "cloudProvider": "googleDrive",
                "objectName": "files",
                "conditions": [
                    {
                        "property": "name",
                        "condition": "REGEX",
                        "value": "/^(PUBLIC|PRIVATE)\\s[A-Za-z]+/"
                    }
                ]
            },
            {
                "name": "is-drive-file-private",
                "description": "this rule is to check if drive files are private",
                "applied": true,
                "level": 0,
                "cloudProvider": "googleDrive",
                "objectName": "files",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "shared",
                                "condition": "DIFFERENT",
                                "value": false
                            },
                            {
                                "property": "name",
                                "condition": "REGEX",
                                "value": "/PRIVATE\\s[A-Za-z]+/"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "is-file-shared-only-by-domaine",
                "description": "this rule is to check if a file is shared only by domain",
                "applied": true,
                "level": 0,
                "cloudProvider": "googleDrive",
                "objectName": "files",
                "conditions": [
                    {
                        "property": "permissions",
                        "condition": "ALL",
                        "value": [
                            {
                                "operator": "NAND",
                                "criteria": [
                                    {
                                        "property": "type",
                                        "condition": "EQUAL",
                                        "value": "user"
                                    },
                                    {
                                        "property": "role",
                                        "condition": "DIFFERENT",
                                        "value": "owner"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "googleWorkspace": {
        "resources": [
            "user",
            "domain",
            "group",
            "role",
            "orgaunit",
            "calendar",
            "file",
            "drive"
        ],
        "thumbnail": "https://lh3.googleusercontent.com/sYGCKFdty43En6yLGeV94mfNGHXfVj-bQYitHRndarB7tHmQq_kyVxhlPejeCBVEEYUbnKG2_jUzgNXoPoer6XJm71V3uz2Z6q0CmNw=w0",
        "documentation": "https://developers.google.com/workspace?hl=fr",
        "freeRules": [
            {
                "name": "workspace-user-mfa-activated",
                "description": "verify if mfa is activated on user account",
                "applied": true,
                "level": 2,
                "cloudProvider": "googleWorkspace",
                "objectName": "user",
                "conditions": [
                    {
                        "property": "isEnrolledIn2Sv",
                        "condition": "EQUAL",
                        "value": true
                    }
                ]
            },
            {
                "name": "workspace-user-mfa-enforced",
                "description": "verify if mfa is enforced for user account",
                "applied": true,
                "level": 2,
                "cloudProvider": "googleWorkspace",
                "objectName": "user",
                "conditions": [
                    {
                        "property": "isEnforcedIn2Sv",
                        "condition": "EQUAL",
                        "value": true
                    }
                ]
            },
            {
                "name": "workspace-user-change-passwd-next-login",
                "description": "verify if there is at least one super admin for OU",
                "applied": true,
                "level": 2,
                "cloudProvider": "googleWorkspace",
                "objectName": "user",
                "conditions": [
                    {
                        "property": "changePasswordAtNextLogin",
                        "condition": "EQUAL",
                        "value": true
                    }
                ]
            },
            {
                "name": "workspace-at-least-one-super-admin",
                "description": "verify if there is at least one super admin for OU",
                "applied": true,
                "level": 2,
                "cloudProvider": "googleWorkspace",
                "objectName": "user",
                "conditions": [
                    {
                        "property": "totalSuperAdmin",
                        "condition": "SUP_OR_EQUAL",
                        "value": 1
                    }
                ]
            },
            {
                "name": "workspace-no-more-than-four-super-admin",
                "description": "verify if there is no more than four super admin for OU",
                "applied": true,
                "level": 2,
                "cloudProvider": "googleWorkspace",
                "objectName": "user",
                "conditions": [
                    {
                        "property": "totalSuperAdmin",
                        "condition": "INF_OR_EQUAL",
                        "value": 4
                    }
                ]
            }
        ]
    },
    "http": {
        "resources": [
            "request"
        ],
        "thumbnail": "https://cdn-icons-png.flaticon.com/512/2165/2165004.png",
        "documentation": "https://developer.mozilla.org/fr/docs/Web/HTTP",
        "freeRules": [
            {
                "name": "http-request-date-in-body",
                "description": "request date in body",
                "applied": true,
                "level": 0,
                "loudMessage": "date is present in body",
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "body.date",
                        "condition": "DIFFERENT",
                        "value": null
                    }
                ]
            },
            {
                "name": "http-request-certificate",
                "description": "check if certificate is present",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "certificate.issuer.CN",
                        "condition": "EQUAL",
                        "value": "Kubernetes Ingress Controller Fake Certificate"
                    },
                    {
                        "property": "certificate.valid_to",
                        "condition": "DATE_INF",
                        "value": "0 0 0 0 0 0",
                        "date": "MMM DD HH:mm:ss YYYY GMT"
                    }
                ]
            },
            {
                "name": "http-request-header",
                "description": "http requested header",
                "applied": true,
                "level": 0,
                "loud": true,
                "loudMessage": "header is present",
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "headers.content-type",
                        "condition": "INCLUDE",
                        "value": "application/json"
                    }
                ]
            },
            {
                "name": "http-request-response-code",
                "description": "check for a specific response code",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "operator": "OR",
                        "criteria": [
                            {
                                "property": "code",
                                "condition": "EQUAL",
                                "value": 200
                            },
                            {
                                "property": "code",
                                "condition": "EQUAL",
                                "value": 201
                            }
                        ]
                    }
                ]
            },
            {
                "name": "http-request-date-in-body",
                "description": "check if date is in body",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "body.date",
                                "condition": "DATE_INF_OR_EQUAL",
                                "value": "0 0 0 0 0 0",
                                "date": "YYYY-MM-DDThh:mm:ss.SSSZ"
                            },
                            {
                                "operator": "OR",
                                "criteria": [
                                    {
                                        "property": "code",
                                        "condition": "EQUAL",
                                        "value": 200
                                    },
                                    {
                                        "property": "code",
                                        "condition": "EQUAL",
                                        "value": 201
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "http-request-certificate",
                "description": "request certificate",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "certificate.issuer.CN",
                        "condition": "EQUAL",
                        "value": "Kubernetes Ingress Controller Fake Certificate"
                    }
                ]
            },
            {
                "name": "http-request-header",
                "description": "request header content",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "headers.content-type",
                        "condition": "INCLUDE",
                        "value": "application/json"
                    }
                ]
            },
            {
                "name": "http-request-date-in-body",
                "description": "request date in body",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "body.date",
                                "condition": "EQUAL",
                                "value": null
                            }
                        ]
                    }
                ]
            },
            {
                "name": "http-request-certificate",
                "description": "request certificate",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "certificate.issuer.CN",
                        "condition": "EQUAL",
                        "value": "Kubernetes Ingress Controller Fake Certificate"
                    },
                    {
                        "property": "certificate.valid_to",
                        "condition": "DATE_INF",
                        "value": "0 0 0 0 0 0",
                        "date": "MMM DD HH:mm:ss YYYY GMT"
                    }
                ]
            },
            {
                "name": "http-request-header",
                "description": "request header content",
                "applied": true,
                "level": 0,
                "cloudProvider": "http",
                "objectName": "request",
                "conditions": [
                    {
                        "property": "headers.content-type",
                        "condition": "INCLUDE",
                        "value": "application/json"
                    }
                ]
            }
        ]
    },
    "kubernetes": {
        "resources": [
            "namespaces",
            "pods",
            "helm"
        ],
        "thumbnail": "https://logos-download.com/wp-content/uploads/2018/09/Kubernetes_Logo.png",
        "documentation": "https://github.com/kubernetes-client/javascript",
        "freeRules": [
            {
                "name": "namespace-exist-api-4urcloud",
                "description": "this rules is to check if namespace exist and notifiable if exist",
                "applied": true,
                "level": 0,
                "cloudProvider": "kubernetes",
                "objectName": "namespaces",
                "conditions": [
                    {
                        "property": "metadata.name",
                        "condition": "DIFFERENT",
                        "value": "4urcloudwebsitepublic"
                    }
                ]
            },
            {
                "name": "all-pods-running-kexawebsite",
                "description": "this rules is to check if all pods are running for a namespace",
                "applied": true,
                "level": 2,
                "cloudProvider": "kubernetes",
                "objectName": "pods",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "status.phase",
                                "condition": "DIFFERENT",
                                "value": "Running"
                            },
                            {
                                "property": "metadata.namespace",
                                "condition": "EQUAL",
                                "value": "kexawebsitepublic"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "kub-alert-if-namespace-not-exist",
                "description": "this rules is to check if namespace exist and notifiable if not",
                "applied": true,
                "level": 0,
                "cloudProvider": "kubernetes",
                "objectName": "namespaces",
                "conditions": [
                    {
                        "property": ".",
                        "condition": "SOME",
                        "value": [
                            {
                                "property": "metadata.name",
                                "condition": "EQUAL",
                                "value": "kexawebsitepublic"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "o365": {
        "resources": [
            "sku",
            "user",
            "domain",
            "secure_score",
            "auth_methods",
            "organization",
            "directory_role",
            "sp",
            "alert",
            "incident",
            "app_access_policy",
            "group",
            "policy",
            "conditional_access",
            "sharepoint_settings"
        ],
        "thumbnail": "https://www.logo.wine/a/logo/Office_365/Office_365-Logo.wine.svg",
        "documentation": "https://learn.microsoft.com/en-us/graph/api/overview?view=graph-rest-1.0",
        "freeRules": [
            {
                "name": "o365-between-two-and-four-global-admins",
                "description": "verify there is at least two and no more than four global administrator",
                "remediation": "Set at least two and a maximum of four Global Administrator users",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "directory_role",
                "conditions": [
                    {
                        "operator": "OR",
                        "criteria": [
                            {
                                "property": "displayName",
                                "condition": "DIFFERENT",
                                "value": "Global Administrator"
                            },
                            {
                                "operator": "AND",
                                "criteria": [
                                    {
                                        "property": "assignedUsers",
                                        "condition": "COUNT_SUP_OR_EQUAL",
                                        "value": 2
                                    },
                                    {
                                        "property": "assignedUsers",
                                        "condition": "COUNT_INF_OR_EQUAL",
                                        "value": 4
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-is-group-public",
                "description": "verify if public groups exist",
                "remediation": "Set the visibility of this group to 'Private' or 'Hidden membership'",
                "applied": false,
                "level": 1,
                "cloudProvider": "o365",
                "objectName": "group",
                "conditions": [
                    {
                        "operator": "OR",
                        "criteria": [
                            {
                                "property": "visibility",
                                "condition": "DIFFERENT",
                                "value": "Public"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-is-user-mfa-activated",
                "description": "verify if mfa is activated for users",
                "remediation": "test",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "auth_methods",
                "conditions": [
                    {
                        "property": "methods",
                        "condition": "SOME",
                        "value": [
                            {
                                "property": "dataType",
                                "condition": "EQUAL",
                                "value": "#microsoft.graph.microsoftAuthenticatorAuthenticationMethod"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-do-timeout-exist",
                "description": "verify if there is active timeout policies",
                "applied": true,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "policy",
                "conditions": [
                    {
                        "property": ".",
                        "condition": "SOME",
                        "value": [
                            {
                                "property": "displayName",
                                "condition": "EQUAL",
                                "value": "ActivityBasedTimeoutPolicy"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-is-idle-timeout-set-3h",
                "description": "verify if idle timeout for inactive user is set to three hours",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "policy",
                "conditions": [
                    {
                        "operator": "XOR",
                        "criteria": [
                            {
                                "property": "displayName",
                                "condition": "DIFFERENT",
                                "value": "ActivityBasedTimeoutPolicy"
                            },
                            {
                                "property": "definition.ActivityBasedTimeoutPolicy.ApplicationPolicies",
                                "condition": "ALL",
                                "value": [
                                    {
                                        "property": "WebSessionIdleTimeout",
                                        "condition": "EQUAL",
                                        "value": "03:00:00"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-security-default",
                "description": "verify if security default policy is disabled",
                "applied": true,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "policy",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "displayName",
                                "condition": "EQUAL",
                                "value": "Security Defaults"
                            },
                            {
                                "property": "isEnabled",
                                "condition": "EQUAL",
                                "value": true
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-is-microsoft-auth-enable",
                "description": "verify if microsoft authenticator is enabled",
                "applied": true,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "policy",
                "conditions": [
                    {
                        "operator": "XOR",
                        "criteria": [
                            {
                                "property": "displayName",
                                "condition": "DIFFERENT",
                                "value": "Authentication Methods Policy"
                            },
                            {
                                "property": "authenticationMethodConfigurations",
                                "condition": "SOME",
                                "value": [
                                    {
                                        "property": "id",
                                        "condition": "EQUAL",
                                        "value": "MicrosoftAuthenticator"
                                    },
                                    {
                                        "property": "state",
                                        "condition": "EQUAL",
                                        "value": "disabled"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-default-user-cannot-create-tenant",
                "description": "ensure that default user is not allowed to create tenant",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "policy",
                "conditions": [
                    {
                        "operator": "NAND",
                        "criteria": [
                            {
                                "property": "displayName",
                                "condition": "EQUAL",
                                "value": "Authorization Policy"
                            },
                            {
                                "property": "defaultUserRolePermissions.allowedToCreateTenants",
                                "condition": "EQUAL",
                                "value": true
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-conditional-access-block-inheritance-auth",
                "description": "ensure that the authentication inheritance blocking policy is enable and active",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "conditional_access",
                "conditions": [
                    {
                        "property": ".",
                        "condition": "SOME",
                        "value": [
                            {
                                "operator": "AND",
                                "criteria": [
                                    {
                                        "property": "templateId",
                                        "condition": "EQUAL",
                                        "value": "0b2282f9-2862-4178-88b5-d79340b36cb8"
                                    },
                                    {
                                        "property": "state",
                                        "condition": "EQUAL",
                                        "value": "enabled"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-conditional-access-users-mfa",
                "description": "ensure that the MFA is enforced for all users",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "conditional_access",
                "conditions": [
                    {
                        "property": ".",
                        "condition": "SOME",
                        "value": [
                            {
                                "operator": "AND",
                                "criteria": [
                                    {
                                        "property": "templateId",
                                        "condition": "EQUAL",
                                        "value": "a3d0a415-b068-4326-9251-f9cdf9feeb64"
                                    },
                                    {
                                        "property": "state",
                                        "condition": "EQUAL",
                                        "value": "enabled"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-conditional-access-admins-mfa",
                "description": "ensure that the MFA is enforced for all users in admins roles",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "conditional_access",
                "conditions": [
                    {
                        "property": ".",
                        "condition": "SOME",
                        "value": [
                            {
                                "operator": "AND",
                                "criteria": [
                                    {
                                        "property": "templateId",
                                        "condition": "EQUAL",
                                        "value": "c7503427-338e-4c5e-902d-abe252abfb43"
                                    },
                                    {
                                        "property": "state",
                                        "condition": "EQUAL",
                                        "value": "enabled"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "name": "o365-sharepoint-external-user-cannot-reshare",
                "description": "ensure that sharepoint external user cannot reshare files",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "sharepoint_settings",
                "conditions": [
                    {
                        "property": "isResharingByExternalUsersEnabled",
                        "condition": "EQUAL",
                        "value": false
                    }
                ]
            },
            {
                "name": "o365-sharepoint-external-sharing-disabled",
                "description": "ensure that sharepoint external sharing is disabled",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "sharepoint_settings",
                "conditions": [
                    {
                        "property": "sharingCapability",
                        "condition": "EQUAL",
                        "value": "disabled"
                    }
                ]
            },
            {
                "name": "o365-sharepoint-sync-restricted-unmanaged-device",
                "description": "ensure that sync is restricted for unmanaged devices",
                "applied": false,
                "level": 2,
                "cloudProvider": "o365",
                "objectName": "sharepoint_settings",
                "conditions": [
                    {
                        "property": "isUnmanagedSyncAppForTenantRestricted",
                        "condition": "EQUAL",
                        "value": true
                    }
                ]
            }
        ]
    }
}