- version: 1.0.0
  date: 07-31-2023
  alert:
    fatal:
      enabled: true
      type:
        - log
        - teams
      to: 
        - "https://innovtecheu.webhook.office.com/webhookb2/d1e6f097-8ece-4b79-9b18-a4d1e2f005e1@e17d1063-88c2-4368-9d08-203b84a1bb40/IncomingWebhook/79fd0693bde5400b99b2622144d3c0ae/9bb0a529-c19a-478f-afd3-04a338037922"
    error:
      enabled: true
      type:
        - log
        - teams
      to: 
        - "https://innovtecheu.webhook.office.com/webhookb2/d1e6f097-8ece-4b79-9b18-a4d1e2f005e1@e17d1063-88c2-4368-9d08-203b84a1bb40/IncomingWebhook/79fd0693bde5400b99b2622144d3c0ae/9bb0a529-c19a-478f-afd3-04a338037922"
    warning:
      enabled: true
      type:
        - log
        - teams
      to:
        - "https://innovtecheu.webhook.office.com/webhookb2/d1e6f097-8ece-4b79-9b18-a4d1e2f005e1@e17d1063-88c2-4368-9d08-203b84a1bb40/IncomingWebhook/79fd0693bde5400b99b2622144d3c0ae/9bb0a529-c19a-478f-afd3-04a338037922"
    info:
      enabled: true
      type:
        - log
        - teams
      to: 
        - "https://innovtecheu.webhook.office.com/webhookb2/d1e6f097-8ece-4b79-9b18-a4d1e2f005e1@e17d1063-88c2-4368-9d08-203b84a1bb40/IncomingWebhook/79fd0693bde5400b99b2622144d3c0ae/9bb0a529-c19a-478f-afd3-04a338037922"
    global:
      enabled: true
      type:
        - log
        - teams
      name: aws-cloud-tests
      to:
        - "https://innovtecheu.webhook.office.com/webhookb2/d1e6f097-8ece-4b79-9b18-a4d1e2f005e1@e17d1063-88c2-4368-9d08-203b84a1bb40/IncomingWebhook/79fd0693bde5400b99b2622144d3c0ae/9bb0a529-c19a-478f-afd3-04a338037922"
      conditions:
        - level: 0
          min: 1
        - level: 1
          min: 1
        - level: 2
          min: 1
        - level: 3
          min: 1
  rules:
    - name: "testing-rule2"
      description: "testing gc2"
      applied: true
      level: 2
      cloudProvider: gcp
      objectName: compute
      conditions:
        - property: id
          condition: EQUAL
          value: "6546461646"
    - name: "aws-ec2-public-ip-address"
      description : "this rule is to check if an ec2 ip address is public"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2Instance
      conditions:
        - property: PublicIpAddress
          condition: EQUAL
          value: null
    - name: "aws-ec2-volume-unattached"
      description: "this rule is to check if an ec2 volume is unattached"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2Volume
      conditions:
        - property: Attachments
          condition: COUNT_SUP
          value: 0
    - name: "aws-ec2-instance-deallocated"
      description: "this rule is to check if an ec2 instance is terminated"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2Instance
      conditions:
        - operator: NAND
          rules:
            - property: State
              condition: EQUAL
              value: terminated
            - property: PrivateIpAddress
              condition: DIFFERENT
              value: null
    - name: "aws-ec2-securitygroup-all-traffic"
      description: "this rule is to check if an ec2 security group has no traffic filter"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2SG
      conditions:
        - property: IpPermissions
          condition: ALL
          value:
            - property: IpProtocol
              condition: DIFFERENT
              value: "-1"
    - name: "ec2-security-group-all-ports"
      description: "this rule is to check if ec2 security group has a defined port"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2SG
      conditions:
        - property: IpPermissions
          condition: ALL
          value:
            - operator: AND
              rules:
                - property: FromPort
                  condition: REGEX
                  value: '^\d+$'
                - property: ToPort
                  condition: REGEX
                  value : '^\d+$'
    - name: "tagsvalue-check-for-expiration-date"
      description: "this rule is to check if tags contain an expiration date (separate with \"-\")"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: tagsValue
      conditions:
        - property: name
          condition: REGEX
          value: '\b\d{1,4}[-]\d{1,4}[-]\d{1,4}\b'
    - name: "ec2-volume-check-create-time-expiration"
      description: "this rule is to check for a ec2 volume create date inferior than 2 months"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: ec2Volume
      conditions:
        - property: CreateTime
          condition: DATE_INF
          value: 0 0 2 0 0 0 0
          date: "YYYY-MM-DDThh:mm:ss.SSS"
          #"2023-07-31T08:35:08.000Z"